
/**
 * KeenIoLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/05/2017
 */
var BaseModel = require("./BaseModel");
/**
 * Creates an instance of Steps
 *
 * @constructor
 */
Steps = function (obj) {
    if(!obj) {
        this.actorProperty = null;     
        this.eventCollection = null;     
        this.filters = null;     
        //Append to variable dictionary
        this._variableDict['actorProperty'] = 'actor_property';
        this._variableDict['eventCollection'] = 'event_collection';
    } else {
        this.actorProperty = (obj.actor_property !== undefined && obj.actor_property !== null)? obj.actor_property : null;
        this.eventCollection = (obj.event_collection !== undefined && obj.event_collection !== null)? obj.event_collection : null;
        this.filters = (obj.filters !== undefined && obj.filters !== null)? obj.filters.map(function(model){
            return new Filters(model);
        }) : null;
        //Append to variable dictionary
        this._variableDict['actorProperty'] = 'actor_property';
        this._variableDict['eventCollection'] = 'event_collection';
    }
};

Steps.prototype = new BaseModel();
Steps.prototype.constructor = Steps;

/**
 * TODO: Write general description for this method
 *
 * @return {array}
 */
Steps.prototype.getActorProperty = function() {
    return this.actorProperty;
};

/**
 * Setter for ActorProperty
 * 
 * @param {array} value 
 */
Steps.prototype.setActorProperty = function(value) {
    this.actorProperty = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
Steps.prototype.getEventCollection = function() {
    return this.eventCollection;
};

/**
 * Setter for EventCollection
 * 
 * @param {string} value 
 */
Steps.prototype.setEventCollection = function(value) {
    this.eventCollection = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {array}
 */
Steps.prototype.getFilters = function() {
    return this.filters;
};

/**
 * Setter for Filters
 * 
 * @param {array} value 
 */
Steps.prototype.setFilters = function(value) {
    this.filters = value;
};


module.exports = Steps;
